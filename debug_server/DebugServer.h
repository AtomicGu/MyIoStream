//==================================================================================================
// 文件：DebugServer.h
// 作者：顾宇浩
// 简介：基于DebugIoStream类的调试服务器类
// 上次修改：2020-6-17 (v1.0.1)
//==================================================================================================

#pragma once
#include <map>
#include <string>
#include "DebugCmd.h"



//==================================================================================================
// 类名：DebugServer
// 说明：
//		调试服务器类。
//		这个类被设计成为一个全局对象，所以在初始化中使用的是引用，在其他情况下的语义还没有经过仔细论证。
//==================================================================================================
class DebugServer
{
public:
	//==================================================================================================
	// 类名：CmdMap
	// 说明：调试指令表类
	//==================================================================================================
	using CmdMap = std::map<std::string, DebugCmd*>;

public:
	//==============================================================================================
	// 类名：ReturnCode（枚举）
	// 说明：这个枚举用于调试服务器主函数的返回值。
	//==============================================================================================
	enum class ReturnCode : uint8_t
	{
		kOK = 0,				// 正常返回
		kIostreamBroken = 1		// IO流损坏
	};

public:
	//==============================================================================================
	// 函数：构造
	// 参数：
	//		ios - 调试输出输出流
	//		cmdMap - 调试指令表
	//
	// 说明：无
	//==============================================================================================
	DebugServer(DebugIoStream& ios, CmdMap& cmdMap) :_ios(ios), _cmdMap(cmdMap) {}

public:
	//==============================================================================================
	// 函数：main
	// 参数：无
	// 返回：ReturnCode枚举
	// 说明：调试服务器主函数
	//==============================================================================================
	ReturnCode main();

public:
	/* 原始访问 */

	//==============================================================================================
	// 函数：ios
	// 参数：无
	// 返回：调试服务器所用的调试IO流
	// 说明：这个函数提供对调试服务器用的调试IO流的原始访问。
	//==============================================================================================
	DebugIoStream& ios() { return _ios; }

	//==============================================================================================
	// 函数：cmd_map
	// 参数：无
	// 返回：调试服务器所用的调试指令列表
	// 说明：这个函数提供对调试服务器用的调试指令列表的原始访问。
	//==============================================================================================
	CmdMap& cmd_map() { return _cmdMap; }

private:
	DebugIoStream& _ios;
	CmdMap& _cmdMap;

private:
	void invalid_cmd(const std::string& str);  // 无效指令处理
};



//==================================================================================================
// inlines: DebugServer
//==================================================================================================

inline void DebugServer::invalid_cmd(const std::string& str)
{
	_ios << "[ INVALID COMMAND: \"" << str << " \"]\n\n";
}
